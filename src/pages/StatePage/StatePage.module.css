.statePage {
  min-height: 100vh;
  background: #f8f9fa;
  padding-top: 64px; /* Account for fixed navbar */
}

.errorPage {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: calc(100vh - 64px);
  text-align: center;
  padding: 2rem;
}

.stateHeader {
  position: relative;
  min-height: 70vh;
  color: white;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 4rem;
  background: linear-gradient(135deg, var(--state-primary-color), var(--state-secondary-color));
}

.animatedBackground {
  position: absolute;
  inset: 0;
  z-index: 1;
  overflow: hidden;
  opacity: 0.7;
}

/* Animated sun/moon */
.celestialBody {
  position: absolute;
  width: 120px;
  height: 120px;
  top: 15%;
  right: 15%;
  background: white;
  border-radius: 50%;
  box-shadow: 0 0 60px rgba(255, 255, 255, 0.6);
  animation: glow 8s infinite ease-in-out;
}

/* Floating clouds */
.cloud {
  position: absolute;
  background: rgba(255, 255, 255, 0.15);
  border-radius: 100px;
  animation: floatCloud linear infinite;
}

.cloud::before,
.cloud::after {
  content: '';
  position: absolute;
  background: inherit;
  border-radius: 50%;
}

/* Large cloud */
.cloud:nth-child(1) {
  width: 180px;
  height: 50px;
  top: 15%;
  animation-duration: 45s;
}

.cloud:nth-child(1)::before {
  width: 80px;
  height: 80px;
  top: -35px;
  left: 25px;
}

.cloud:nth-child(1)::after {
  width: 60px;
  height: 60px;
  top: -25px;
  left: 85px;
}

/* Medium cloud */
.cloud:nth-child(2) {
  width: 140px;
  height: 40px;
  top: 30%;
  animation-duration: 35s;
  animation-delay: -15s;
  opacity: 0.8;
}

.cloud:nth-child(2)::before {
  width: 60px;
  height: 60px;
  top: -30px;
  left: 15px;
}

.cloud:nth-child(2)::after {
  width: 45px;
  height: 45px;
  top: -20px;
  left: 65px;
}

/* Small cloud */
.cloud:nth-child(3) {
  width: 120px;
  height: 35px;
  top: 45%;
  animation-duration: 40s;
  animation-delay: -25s;
  opacity: 0.6;
}

.cloud:nth-child(3)::before {
  width: 50px;
  height: 50px;
  top: -25px;
  left: 10px;
}

.cloud:nth-child(3)::after {
  width: 35px;
  height: 35px;
  top: -15px;
  left: 55px;
}

/* Additional small cloud */
.cloud:nth-child(4) {
  width: 100px;
  height: 30px;
  top: 25%;
  animation-duration: 50s;
  animation-delay: -10s;
  opacity: 0.7;
}

.cloud:nth-child(4)::before {
  width: 45px;
  height: 45px;
  top: -20px;
  left: 8px;
}

.cloud:nth-child(4)::after {
  width: 30px;
  height: 30px;
  top: -12px;
  left: 45px;
}

@keyframes floatCloud {
  from { 
    transform: translateX(-200%) translateY(0);
  }
  50% {
    transform: translateX(100%) translateY(-10px);
  }
  to { 
    transform: translateX(400%) translateY(0);
  }
}

/* Palm tree */
.palmTree {
  position: absolute;
  bottom: -20px;
  left: 10%;
  width: 40px;
  height: 200px;
  transform-origin: bottom center;
  animation: sway 8s ease-in-out infinite;
}

.trunk {
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 20px;
  height: 140px;
  background: rgba(255, 255, 255, 0.2);
  transform: translateX(-50%);
  border-radius: 10px;
}

.leaves {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
}

.leaf {
  position: absolute;
  width: 100px;
  height: 40px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 100px;
  transform-origin: 0 center;
}

.leaf:nth-child(1) { transform: rotate(-20deg) translateX(-50%); }
.leaf:nth-child(2) { transform: rotate(20deg) translateX(-50%); }
.leaf:nth-child(3) { transform: rotate(-50deg) translateX(-50%); }
.leaf:nth-child(4) { transform: rotate(50deg) translateX(-50%); }

/* Beach waves */
.waves {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 40%;
  mask-image: linear-gradient(to bottom, transparent, black);
  -webkit-mask-image: linear-gradient(to bottom, transparent, black);
}

.wave {
  position: absolute;
  height: 100px;
  width: 200%;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  left: -50%;
  animation: waveMotion infinite linear;
}

.wave:nth-child(1) {
  bottom: -80px;
  animation-duration: 15s;
  opacity: 0.3;
}

.wave:nth-child(2) {
  bottom: -90px;
  animation-duration: 12s;
  animation-delay: -5s;
  opacity: 0.2;
}

.wave:nth-child(3) {
  bottom: -100px;
  animation-duration: 18s;
  animation-delay: -8s;
  opacity: 0.1;
}

/* Holiday symbols */
.holidaySymbol {
  position: absolute;
  width: 20px;
  height: 20px;
  background: rgba(255, 255, 255, 0.3);
  animation: float 10s infinite ease-in-out;
}

.holidaySymbol:nth-child(1) {
  clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
  top: 30%;
  left: 20%;
  animation-delay: -2s;
}

.holidaySymbol:nth-child(2) {
  clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
  top: 40%;
  right: 25%;
  animation-delay: -4s;
}

.holidaySymbol:nth-child(3) {
  border-radius: 50%;
  top: 60%;
  left: 40%;
  animation-delay: -6s;
}

/* Animations */
@keyframes glow {
  0%, 100% { transform: scale(1); opacity: 0.8; }
  50% { transform: scale(1.1); opacity: 1; }
}

@keyframes sway {
  0%, 100% { transform: rotate(-2deg); }
  50% { transform: rotate(2deg); }
}

@keyframes waveMotion {
  from { transform: translateX(0) rotate(2deg); }
  to { transform: translateX(-50%) rotate(-1deg); }
}

@keyframes float {
  0%, 100% { transform: translate(0, 0) rotate(0deg); }
  25% { transform: translate(10px, -10px) rotate(5deg); }
  50% { transform: translate(0, -20px) rotate(0deg); }
  75% { transform: translate(-10px, -10px) rotate(-5deg); }
}

.headerOverlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, 
    rgba(var(--state-primary-rgb), 0.4) 0%, 
    rgba(var(--state-secondary-rgb), 0.4) 100%);
  z-index: 2;
  backdrop-filter: blur(0px);
}

.headerContent {
  position: relative;
  z-index: 3;
  max-width: 1200px;
  margin: 0 auto;
  text-align: center;
  padding: 4rem 2rem;
  width: 100%;
}

.decorativeElements {
  position: absolute;
  inset: 0;
  z-index: 2;
  overflow: hidden;
  opacity: 0.1;
  pointer-events: none;
}

.decorativeElement {
  position: absolute;
  width: 40px;
  height: 40px;
  background: white;
  opacity: 0.3;
  border-radius: 50%;
  animation: float 20s infinite linear;
}

.decorativeElement:nth-child(1) { top: 10%; left: 10%; animation-delay: 0s; }
.decorativeElement:nth-child(2) { top: 20%; right: 20%; animation-delay: -5s; }
.decorativeElement:nth-child(3) { bottom: 30%; left: 30%; animation-delay: -10s; }
.decorativeElement:nth-child(4) { bottom: 20%; right: 10%; animation-delay: -15s; }

@keyframes float {
  0% {
    transform: translate(0, 0) rotate(0deg) scale(1);
    opacity: 0.3;
  }
  25% {
    transform: translate(100px, 50px) rotate(90deg) scale(1.2);
    opacity: 0.4;
  }
  50% {
    transform: translate(200px, 0) rotate(180deg) scale(1);
    opacity: 0.3;
  }
  75% {
    transform: translate(100px, -50px) rotate(270deg) scale(1.2);
    opacity: 0.4;
  }
  100% {
    transform: translate(0, 0) rotate(360deg) scale(1);
    opacity: 0.3;
  }
}

.heroStats {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2rem;
  margin-bottom: 3rem;
  animation: fadeInUp 1s ease-out;
}

.statBadge {
  display: flex;
  flex-direction: column;
  align-items: center;
  background: rgba(255, 255, 255, 0.1);
  padding: 1.5rem 2rem;
  border-radius: 20px;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  transition: transform 0.3s ease;
  animation: float 6s ease-in-out infinite;
}

.statBadge:hover {
  transform: translateY(-5px);
  background: rgba(255, 255, 255, 0.15);
}

.statNumber {
  font-size: 3rem;
  font-weight: 800;
  line-height: 1;
  margin-bottom: 0.5rem;
  background: linear-gradient(135deg, #fff, rgba(255, 255, 255, 0.7));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.statLabel {
  font-size: 1rem;
  opacity: 0.9;
}

.statDivider {
  width: 2px;
  height: 60px;
  background: rgba(255, 255, 255, 0.2);
  transform: rotate(15deg);
}

.stateHeader h1 {
  font-size: 4rem;
  margin-bottom: 1.5rem;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  font-weight: 800;
  line-height: 1.2;
  animation: fadeInUp 1s ease-out 0.2s backwards;
}

.heroSubtitle {
  font-size: 1.5rem;
  margin-bottom: 3rem;
  opacity: 0.9;
  animation: fadeInUp 1s ease-out 0.4s backwards;
}

.heroActions {
  display: flex;
  justify-content: center;
  gap: 1.5rem;
  animation: fadeInUp 1s ease-out 0.6s backwards;
}

.primaryButton, .secondaryButton {
  padding: 1rem 2rem;
  border-radius: 30px;
  font-size: 1.1rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  transition: all 0.3s ease;
  text-decoration: none;
  position: relative;
  overflow: hidden;
}

.primaryButton {
  background: white;
  color: var(--state-primary-color);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.primaryButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
}

.secondaryButton {
  background: rgba(255, 255, 255, 0.1);
  color: white;
  border: 1px solid rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
}

.secondaryButton:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-2px);
}

.buttonIcon {
  font-size: 1.2rem;
  transition: transform 0.3s ease;
}

.primaryButton:hover .buttonIcon,
.secondaryButton:hover .buttonIcon {
  transform: translateX(5px);
}

.content {
  max-width: 1400px;
  margin: -4rem auto 0;
  padding: 0 2rem 4rem;
  position: relative;
  z-index: 4;
}

.mainGrid {
  display: grid !important;
  grid-template-columns: 2fr 1fr !important;
  gap: 2rem !important;
  align-items: start !important;
  width: 100% !important;
}

.leftColumn {
  min-width: 0;
  width: 100% !important;
}

.rightColumn {
  min-width: 0;
  width: 100% !important;
}

.stickyContent {
  position: sticky;
  top: 80px;
  width: 100% !important;
}

.mainContent {
  background: white;
  border-radius: 20px;
  padding: 2.5rem;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  width: 100% !important;
}

.intro {
  font-size: 1.2rem;
  line-height: 1.8;
  color: #2d3748;
  margin-bottom: 3rem;
  padding-bottom: 2rem;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.holidaySection,
.seasonalSection {
  margin-bottom: 4rem;
}

.holidayList {
  display: grid;
  gap: 1.5rem;
  margin-top: 2rem;
}

.holidayItem {
  background: white;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  transition: transform 0.2s;
  border: 1px solid rgba(0, 0, 0, 0.05);
  position: relative;
  overflow: hidden;
}

.holidayItem:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.holidayContent {
  padding: 1.5rem;
}

.holidayContent h3 {
  color: var(--state-primary-color);
  margin-bottom: 0.75rem;
  font-size: 1.3rem;
}

.seasonGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1.5rem;
  margin-top: 2rem;
}

.seasonCard {
  background: white;
  padding: 1.5rem;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  transition: transform 0.2s;
  border: 1px solid rgba(0, 0, 0, 0.05);
  position: relative;
  overflow: hidden;
}

.seasonCard:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.seasonCard h3 {
  color: var(--state-primary-color);
  margin-bottom: 1rem;
  font-size: 1.2rem;
  padding-bottom: 0.5rem;
  border-bottom: 2px solid var(--state-secondary-color);
}

.quickInfo {
  background: white;
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  margin-bottom: 2rem;
  width: 100% !important;
}

.infoCard {
  background: #f8f9fa;
  padding: 1.5rem;
  border-radius: 12px;
  margin-bottom: 1.5rem;
  border: 1px solid rgba(0, 0, 0, 0.05);
}

.infoCard:last-child {
  margin-bottom: 0;
}

.infoCard h3 {
  color: var(--state-primary-color);
  margin-bottom: 1rem;
  font-size: 1.2rem;
}

.faqSection {
  background: white;
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  width: 100% !important;
}

.faqList {
  display: grid;
  gap: 1.5rem;
  margin-top: 1.5rem;
}

.faqItem {
  background: #f8f9fa;
  padding: 1.5rem;
  border-radius: 12px;
  border: 1px solid rgba(0, 0, 0, 0.05);
}

.faqItem h3 {
  color: var(--state-primary-color);
  margin-bottom: 1rem;
  font-size: 1.1rem;
  font-weight: 600;
}

.bottomSection {
  max-width: 1400px;
  margin: 4rem auto 0;
}

.callToAction {
  background: linear-gradient(135deg, 
    var(--state-primary-color) 0%, 
    var(--state-secondary-color) 100%);
  border-radius: 20px;
  padding: 4rem;
  color: white;
  position: relative;
  overflow: hidden;
}

.ctaContent {
  position: relative;
  z-index: 2;
  text-align: center;
}

.ctaStats {
  display: flex;
  justify-content: center;
  gap: 3rem;
  margin: 2rem 0;
}

.ctaStat {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  animation: float 6s ease-in-out infinite;
}

.ctaNumber {
  font-size: 3rem;
  font-weight: 800;
  line-height: 1;
  margin-bottom: 0.5rem;
  background: linear-gradient(135deg, #fff, rgba(255, 255, 255, 0.7));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.ctaStat span:last-child {
  font-size: 1.1rem;
  opacity: 0.9;
}

.ctaButton {
  background: white;
  color: var(--state-primary-color);
  padding: 1rem 2rem;
  border-radius: 30px;
  font-size: 1.2rem;
  font-weight: 600;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  text-decoration: none;
  position: relative;
  overflow: hidden;
}

.ctaButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive Design */
@media (max-width: 1200px) {
  .mainGrid {
    grid-template-columns: 1fr !important;
  }

  .stickyContent {
    position: static;
  }

  .seasonGrid {
    grid-template-columns: 1fr;
  }

  .ctaStats {
    flex-wrap: wrap;
    justify-content: space-around;
  }
}

@media (max-width: 768px) {
  .stateHeader {
    min-height: 80vh;
  }

  .headerContent {
    padding: 2rem 1rem;
  }

  .stateHeader h1 {
    font-size: 2.5rem;
  }

  .heroStats {
    flex-direction: column;
    gap: 1rem;
  }

  .statDivider {
    display: none;
  }

  .heroActions {
    flex-direction: column;
    width: 100%;
  }

  .primaryButton,
  .secondaryButton {
    width: 100%;
    justify-content: center;
  }

  .content {
    margin-top: -2rem;
    padding: 0 1rem 2rem;
  }

  .mainContent,
  .quickInfo,
  .faqSection {
    padding: 1.5rem;
  }

  .callToAction {
    padding: 2rem 1rem;
  }

  .ctaButton {
    width: 100%;
    justify-content: center;
  }
} 

/* Add loading animation */
@keyframes imagePlaceholder {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

.destinationImage.loading {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200% 100%;
  animation: imagePlaceholder 1.5s infinite;
} 

/* Add these new animations and decorative styles */
@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
}

@keyframes pulse {
  0%, 100% { transform: scale(1); opacity: 0.5; }
  50% { transform: scale(1.05); opacity: 0.8; }
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.headerOverlay::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle at center, 
    rgba(255, 255, 255, 0.1) 0%,
    transparent 50%);
  animation: rotate 60s linear infinite;
  pointer-events: none;
}

.headerOverlay::after {
  content: '';
  position: absolute;
  inset: 0;
  background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2V6h4V4H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  opacity: 0.1;
  pointer-events: none;
}

.decorativeCircle {
  position: absolute;
  border-radius: 50%;
  background: radial-gradient(circle at center,
    rgba(255, 255, 255, 0.2) 0%,
    transparent 70%);
  animation: pulse 4s ease-in-out infinite;
  pointer-events: none;
}

.decorativeCircle:nth-child(1) {
  width: 300px;
  height: 300px;
  top: -150px;
  right: -150px;
  animation-delay: 0s;
}

.decorativeCircle:nth-child(2) {
  width: 200px;
  height: 200px;
  bottom: -100px;
  left: -100px;
  animation-delay: -1s;
}

.statBadge {
  animation: float 6s ease-in-out infinite;
}

.statBadge:nth-child(1) {
  animation-delay: 0s;
}

.statBadge:nth-child(2) {
  animation-delay: -2s;
}

.seasonCard {
  position: relative;
  overflow: hidden;
}

.seasonCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    to right,
    transparent 0%,
    rgba(255, 255, 255, 0.3) 50%,
    transparent 100%
  );
  transform: skewX(-25deg);
  transition: all 0.75s;
}

.seasonCard:hover::before {
  left: 150%;
}

.holidayItem {
  position: relative;
  overflow: hidden;
}

.holidayContent::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    rgba(255, 255, 255, 0.1) 0%,
    transparent 50%
  );
  opacity: 0;
  transition: opacity 0.3s;
  pointer-events: none;
}

.holidayItem:hover .holidayContent::before {
  opacity: 1;
}

.callToAction {
  position: relative;
  overflow: hidden;
}

.callToAction::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(
    circle at center,
    rgba(255, 255, 255, 0.1) 0%,
    transparent 50%
  );
  animation: rotate 30s linear infinite;
}

.ctaStat {
  position: relative;
  animation: float 6s ease-in-out infinite;
}

.ctaStat:nth-child(1) { animation-delay: 0s; }
.ctaStat:nth-child(2) { animation-delay: -2s; }
.ctaStat:nth-child(3) { animation-delay: -4s; }

/* Add hover effect for buttons */
.primaryButton, .secondaryButton, .ctaButton {
  position: relative;
  overflow: hidden;
}

.primaryButton::after,
.secondaryButton::after,
.ctaButton::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(
    circle at center,
    rgba(255, 255, 255, 0.2) 0%,
    transparent 50%
  );
  opacity: 0;
  transition: opacity 0.3s;
  transform: translate(-50%, -50%) rotate(45deg);
}

.primaryButton:hover::after,
.secondaryButton:hover::after,
.ctaButton:hover::after {
  opacity: 1;
}

/* Add smooth section transitions */
.mainContent section {
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.6s ease-out;
}

.mainContent section.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Add decorative elements to sections */
.sectionDecoration {
  position: absolute;
  width: 100px;
  height: 100px;
  background: var(--state-primary-color);
  opacity: 0.05;
  border-radius: 50%;
  pointer-events: none;
}

.quickInfo::before,
.faqSection::before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 150px;
  height: 150px;
  background: var(--state-secondary-color);
  opacity: 0.05;
  border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
  transform: translate(30%, -30%);
} 

.holidayOverview {
  background: white;
  margin-top: -2rem;
  position: relative;
  z-index: 5;
  padding: 0 2rem;
}

.holidayGrid {
  max-width: 1400px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 2rem;
  padding: 2rem;
  background: white;
  border-radius: 20px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.holidayColumn {
  min-width: 0;
}

.columnHeader {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 2px solid var(--state-primary-color);
}

.headerIcon {
  font-size: 2rem;
  background: linear-gradient(135deg,
    var(--state-primary-color),
    var(--state-secondary-color));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: pulse 2s ease-in-out infinite;
}

.columnHeader h2 {
  font-size: 1.5rem;
  margin: 0;
  color: var(--state-primary-color);
}

.columnHeader h2::after {
  display: none;
}

.columnHeader p {
  font-size: 0.9rem;
  color: #666;
  margin: 0.25rem 0 0;
}

.holidayList {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.holidayRow {
  display: flex;
  align-items: center;
  padding: 0.75rem 1rem;
  border-radius: 8px;
  background: #f8f9fa;
  transition: all 0.2s ease;
  border: 1px solid transparent;
}

.holidayRow:hover {
  transform: translateX(5px);
  background: #f0f2f5;
  border-color: rgba(0, 0, 0, 0.05);
}

.holidayDate {
  min-width: 140px;
  font-family: 'Roboto Mono', monospace;
  font-size: 0.9rem;
  color: #666;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding-right: 1rem;
  border-right: 1px solid rgba(0, 0, 0, 0.1);
}

.dateSeparator {
  color: var(--state-primary-color);
  font-weight: bold;
  margin: 0 0.25rem;
}

.holidayName {
  flex: 1;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding-left: 1rem;
  letter-spacing: 0.01em;
}

.regionalBadge {
  font-size: 0.7rem;
  padding: 0.2rem 0.5rem;
  border-radius: 12px;
  background: var(--state-primary-color);
  color: white;
  font-weight: normal;
}

/* Update content margin to account for holiday overview */
.content {
  margin-top: 2rem;
}

/* Responsive adjustments */
@media (max-width: 1024px) {
  .holidayGrid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }

  .holidayOverview {
    margin-top: -1rem;
    padding: 0 1rem;
  }
}

@media (max-width: 768px) {
  .holidayRow {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .holidayDate {
    min-width: auto;
    font-size: 0.85rem;
    padding-right: 0;
    border-right: none;
  }

  .holidayName {
    padding-left: 0;
    font-size: 0.95rem;
  }
}

/* Add these to the existing animations */
@keyframes pulse {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 1; }
}

.stateSelection {
  margin-bottom: 2rem;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.stateSelection select {
  background-color: rgba(255, 255, 255, 0.9);
  border: none;
  border-radius: 20px;
  padding: 0.5rem 2rem 0.5rem 1rem;
  font-size: 1rem;
  color: var(--state-primary-color);
  cursor: pointer;
  transition: all 0.3s ease;
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%234338ca' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 0.5rem center;
  background-size: 1.5rem 1.5rem;
}

.stateSelection select:hover {
  background-color: rgba(255, 255, 255, 1);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.stateSelection select:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.4);
} 